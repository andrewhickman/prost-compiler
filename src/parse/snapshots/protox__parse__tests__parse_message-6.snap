---
source: src/parse/tests.rs
expression: "match parser.parse_message() {\n    Ok(value) => Ok(value),\n    Err(()) => Err(parser.lexer.extras.errors),\n}"
---
Ok(
    Message {
        name: Ident {
            value: "Foo",
            span: 8..11,
        },
        body: MessageBody {
            items: [
                Field(
                    Field {
                        label: Some(
                            (
                                Repeated,
                                14..22,
                            ),
                        ),
                        name: Ident {
                            value: "a",
                            span: 27..28,
                        },
                        kind: Normal {
                            ty: Named(
                                TypeName {
                                    leading_dot: None,
                                    name: FullIdent {
                                        parts: [
                                            Ident {
                                                value: "Bar",
                                                span: 23..26,
                                            },
                                        ],
                                    },
                                },
                            ),
                            ty_span: 23..26,
                        },
                        number: Int {
                            negative: false,
                            value: 1,
                            span: 31..32,
                        },
                        options: [],
                        comments: Comments {
                            leading_detached_comments: [],
                            leading_comment: None,
                            trailing_comment: None,
                        },
                        span: 14..33,
                    },
                ),
            ],
            extensions: [],
            options: [],
            reserved: [],
        },
        comments: Comments {
            leading_detached_comments: [],
            leading_comment: None,
            trailing_comment: None,
        },
        span: 0..35,
    },
)
